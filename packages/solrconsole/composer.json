{
  "name": "apache-solr-for-typo3/solrconsole",
  "type": "typo3-cms-extension",
  "description": "Solrconsole: Less monkey business, more time for the important stuff",
  "license": "GPL-2.0+",
  "keywords": ["typo3", "TYPO3 CMS", "solr", "search"],
  "homepage": "http://www.typo3-solr.com",
  "authors": [
    {
      "name": "Benni Mack",
      "email": "benni@typo3.org"
    },
    {
      "name": "Jens Jacobsen",
      "email": "typo3@jens-jacobsen.de"
    },
    {
      "name": "Timo Hund",
      "email": "timo.hund@dkd.de"
    }
  ],
  "require": {
    "php": "^8.1",
    "typo3/cms-core": "^12.4.3",
    "typo3/cms-extbase": "*",
    "helhum/typo3-console": "^8.0.0",
    "apache-solr-for-typo3/solr": "^12.0.3"
  },
  "require-dev": {
    "typo3/testing-framework": "^8.0",
    "typo3/coding-standards": "~0.7.1",
    "typo3/cms-composer-installers": "^5.0.0",
    "friendsofphp/php-cs-fixer": "^3.41.0",
    "phpstan/phpstan": "^1.10",
    "phpstan/phpstan-phpunit": "^1.3",
    "phpunit/phpunit": "^10.1",
    "dg/bypass-finals": "^1.7"
  },
  "suggest": {
    "apache-solr-for-typo3/solrfal": "Install EXT:solrfal to use solrfal related commands."
  },
  "autoload": {
    "psr-4": {
      "ApacheSolrForTypo3\\Solrconsole\\": "Classes/"
    }
  },
  "autoload-dev": {
    "psr-4": {
      "ApacheSolrForTypo3\\Solrconsole\\Tests\\": "Tests/",
      "ApacheSolrForTypo3\\Solr\\Tests\\": ".Build/vendor/apache-solr-for-typo3/solr/Tests/",
      "TYPO3\\CMS\\Core\\Tests\\": ".Build/vendor/typo3/cms-core/Tests/"
    }
  },
  "config": {
    "allow-plugins": {
      "typo3/class-alias-loader": true,
      "typo3/cms-composer-installers": true
    },
    "optimize-autoloader": true,
    "vendor-dir": ".Build/vendor",
    "bin-dir": ".Build/bin",
    "preferred-install": {
      "apache-solr-for-typo3/solr": "source",
      "typo3/cms-core": "source"
    }
  },
  "scripts-descriptions": {
    "ext:archive:path": "Prints the path of EXT:solrconsole for TER generated by ext:build:for-ter",
    "ext:build:for-ter": "Builds the EXT:solrconsole TER archive",
    "ext:env": "[Internal script], which is used by ext:build:for-ter to provide the variables",
    "ext:version": "Prints EXT:solrconsole version defined in ext_emmconf.php",

    "t3:standards:fix": "Fixes a possible TYPO3 coding standards errors.",
    "t3:standards:check": "Checks code for TYPO3 coding standards violations.",

    "tests:env":  "Checks the requirements in environment for tests.",
    "tests:restore-git": "[Internal script], which is used after tests:setup to restore the composer.json.",
    "tests:setup": "Installs composer dependencies, required for tests."
  },
  "scripts": {
    "ext:version": "@php -r '$EM_CONF=[]; $_EXTKEY=\"ext\"; require_once(\"ext_emconf.php\"); echo($EM_CONF[\"ext\"][\"version\"]);'",
    "ext:env": [
      "@putenv EXT_ARCHIVE_DIR=.Build/archive"
    ],
    "ext:archive:path": [
      "@ext:env",
      "echo ${EXT_ARCHIVE_DIR}/solrconsole_$($COMPOSER_BINARY ext:version).zip"
    ],
    "ext:build:for-ter": [
      "@ext:env",
      "@php -r \"@mkdir(\\\"${EXT_ARCHIVE_DIR}\\\", 0777, true);\"",
      "git archive -o ${EXT_ARCHIVE_DIR}/solrconsole-$($COMPOSER_BINARY ext:version).zip HEAD"
    ],
    "post-autoload-dump": [
      "mkdir -p .Build/Web/typo3conf/ext/",
      "[ -L .Build/vendor/apache-solr-for-typo3/solrconsole ] || ln -snvf ../../../. .Build/vendor/apache-solr-for-typo3/solrconsole"
    ],
    "tests:cleanup": [
      "@tests:restore-git",
      "git clean -xfd .Build/"
    ],
    "tests:restore-git": "echo \"Restore composer.json to initial state:\" && git checkout composer.json && rm composer.lock",
    "tests:env": [
      "if [ -z ${TYPO3_VERSION+x} ]; then >&2 echo \"Can not proceed, because env var TYPO3_VERSION is not set\"; exit 1; else echo \"Setup test environment for TYPO3 ${TYPO3_VERSION}\"; fi",
      "if echo $TYPO3_VERSION | grep -q \"dev\"; then $COMPOSER_BINARY config minimum-stability dev; fi"
    ],
    "tests:setup:global-require": [
      "echo \"Install global composer dependencies.\"",
      "@composer global require sclable/xml-lint --ignore-platform-reqs"
    ],
    "tests:setup": [
      "@tests:env",
      "@composer config repositories.solrfal vcs \"git@github.com:TYPO3-Solr/ext-solrfal.git\"",
      "@composer req --update-with-all-dependencies typo3/cms-core:${TYPO3_VERSION:-*} apache-solr-for-typo3/solr:$($COMPOSER_BINARY config extra.TYPO3-Solr.CI.matrix.ext-solr) apache-solr-for-typo3/solrfal:$($COMPOSER_BINARY config extra.TYPO3-Solr.CI.matrix.ext-solrfal)",
      "@tests:restore-git"
    ],
    "tests:unit": [
      ".Build/bin/phpunit --config Build/Test/UnitTests.xml"
    ],
    "tests:integration": [
      "phpunit --colors --coverage-text -c Build/Test/IntegrationTests.xml"
    ],
    "tests:phpstan": [
      "phpstan analyze -c Build/Test/phpstan.neon"
    ],
    "t3:standards:fix": [
      "php-cs-fixer fix --diff"
    ],
    "t3:standards:check": [
      "php-cs-fixer check --diff"
    ],
    "tests:lint-xml": [
      "echo \"Run XML Lint\"",
      "if ! $($COMPOSER_BINARY config home)/vendor/bin/xmllint Build/Test/ --pattern='*.xml' --exclude=.Build/*; then echo \"Some XML files are not valid\" && echo \"Please fix the files listed above\" && export EXIT_CODE=4; else echo \"No syntax errors! Great job!\"; fi"
    ]
  },
  "extra": {
    "branch-alias": {
      "dev-main": "12.0.x-dev"
    },
    "typo3/class-alias-loader": {
      "always-add-alias-loader": true
    },
    "typo3/cms": {
      "extension-key": "solrconsole",
      "cms-package-dir": "{$vendor-dir}/typo3/cms",
      "web-dir": ".Build/Web"
    },
    "TYPO3-Solr": {
      "CI": {
        "matrix": {
          "ext-solr": "12.0.x-dev",
          "ext-solrfal": "12.0.x-dev"
        }
      }
    }
  }
}
